import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import '../styles/Home.module.scss';
import styles from '../styles/Home.module.scss';
import { gsap } from 'gsap';

import femaleModel1 from '../assets/sunglasses-1.jpg';
import femaleModel2 from '../assets/sunglasses-2.jpg';
import femaleModel3 from '../assets/sunglasses-3.jpg';
import femaleModel4 from '../assets/sunglasses-4.jpg';

import maleModel1 from '../assets/sweaters-1.jpg';
import maleModel2 from '../assets/sweaters-2.jpg';
import maleModel3 from '../assets/sweaters-3.jpg';
import maleModel4 from '../assets/sweaters-4.jpg';
import { useEffect, useRef } from 'react';
import { time } from 'console';

const Home: NextPage = () => {
  let femaleModels = [femaleModel1, femaleModel2, femaleModel3, femaleModel4];
  let maleModels = [maleModel1, maleModel2, maleModel3, maleModel4];
  let zIndex = 10000;

  const headerRef = {
    h1Ref: useRef(null),
    h2Ref: useRef(null),
    h1Spans: useRef([]),
    h2Spans: useRef([]),
  };
  const { h1Ref, h2Ref, h1Spans, h2Spans } = headerRef;

  const femaleModesRef = {
    femaleSlides: useRef([]),
  };
  const { femaleSlides } = femaleModesRef;

  // Header UseEffect
  useEffect(() => {
    const fadeInTimeLine = gsap.timeline();
    const movementTimeLine = gsap.timeline({
      repeat: -1,
    });

    const h2SpanWidths = h2Spans.current[0].clientWidth * -1;

    fadeInTimeLine
      .set([h1Ref.current, h2Ref.current], { opacity: 0 })
      .to([h1Ref.current, h2Ref.current], {
        opacity: 1,
        delay: 1,
        stagger: 1,
        duration: 3,
      });

    movementTimeLine
      .set([...h1Spans.current, ...h2Spans.current], {
        x: 0,
      })
      .to([...h1Spans.current, ...h2Spans.current], {
        x: h2SpanWidths,
        duration: 10,
        ease: 'linear',
      });
  }, []);

  // femaleSlides UseEffect
  useEffect(() => {
    const timeLine = gsap.timeline();
    console.log(femaleSlides.current);

    // Set all images to the bottom offscreen and rotate them
    timeLine.set(femaleSlides.current, {
      x: () => {
        return 250 * Math.random() - 125;
      },
      y: '500%',
      rotate: () => {
        return 90 * Math.random() - 45;
      },
    });

    // Animate them to the top onscreen
    femaleSlides.current.forEach((slide, index) => {
      timeLine.to(slide, {
        y: 0,
        x: 0,
        stagger: 0.25,
      });
    });

    // Rotate them one by one
    timeLine.to(femaleSlides.current, {
      rotate: () => {
        return 16 * Math.random() - 8;
      },

      duration: 0.6,
      ease: 'linear',
    });
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Seamstress</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <header className={styles.header}>
        <h1 ref={h1Ref}>
          {new Array(30).fill('span').map((span, index) => (
            <span
              ref={element => {
                h1Spans.current[index] = element;
              }}
            >
              Seamstress
            </span>
          ))}
        </h1>
        <h2 ref={h2Ref}>
          {new Array(30).fill('span').map((span, index) => (
            <span
              ref={element => {
                h2Spans.current[index] = element;
              }}
            >
              Lookbook Spring + Summer
            </span>
          ))}
        </h2>
      </header>

      <section className={styles.section}>
        <div className={`${styles.split} ${styles.gray_background}`}>
          <div className={styles.slides}>
            {femaleModels.map((image: any, index: any) => (
              <div
                className={styles.slidesImageWrapper}
                style={{ zIndex: zIndex - index }}
                ref={element => {
                  femaleSlides.current[index] = element;
                }}
                onClick={event => {
                  let flipTimeLine = gsap.timeline();
                  let target = event.currentTarget;
                  flipTimeLine.to(target, { x: '200%', rotate: 60 });

                  flipTimeLine.to(target, {
                    x: '0%',
                    rotate: () => {
                      return 16 * Math.random() - 8;
                    },
                  });

                  setTimeout(() => {
                    target.style.zIndex = `${(zIndex -= femaleModels.length)}`;
                  }, 500);
                }}
              >
                <Image layout='responsive' src={image} alt='' />
              </div>
            ))}
          </div>
        </div>

        <div className={styles.split}>
          <div className={styles.info}>
            <h2>Summer Sunnies</h2>
            <p>
              We jumped on a call with top eyewear designer, Poppy Lu, from her
              home in New York City to discuss what's in and what's not in, for
              this summer's sunglasses look.
            </p>
          </div>
        </div>
      </section>

      <section className={styles.section}>
        <div className={styles.split}>
          <div className={styles.info}>
            <h2>Menswear to swear by</h2>
            <p>
              Is it too much to hope that we finally could have a tipping point
              in sustainable thinking and climate change? We asked fashion
              designer, Ronen Hill, if this summer's collection will be the most
              eco-friendly ever.
            </p>
          </div>
        </div>
        <div className={`${styles.split} ${styles.gray_background}`}>
          <div className={styles.slides}>
            {maleModels.map((image: any, index: any) => (
              <div
                className={styles.slidesImageWrapper}
                style={{ zIndex: zIndex - index }}
                onClick={event => {
                  event.currentTarget.style.zIndex = `${(zIndex -=
                    maleModels.length)}`;
                }}
              >
                <Image layout='responsive' src={image} alt='' />
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
};

export default Home;
